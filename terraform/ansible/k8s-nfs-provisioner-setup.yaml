- hosts: localhost
  vars:
     helm_chart_url: "https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner"
     nfs_ip_address: "10.140.19.30"
     k8_name_space: "nfs-provisioner"
  tasks:
     - name: Add helm repo nfs-subdir-external-provisioner
       kubernetes.core.helm_repository:
        name: nfs-subdir-external-provisioner
        repo_url: "{{ helm_chart_url }}"

     - name: Create a k8s namespace
       kubernetes.core.k8s:
          name: "{{ k8_name_space }}"
          api_version: v1
          kind: Namespace
          state: present

     - name: Install nfs-subdir-external-provisioner
       kubernetes.core.helm:
         name: nfs-subdir-external-provisioner
         namespace: "{{ k8_name_space }}"
         chart_ref: nfs-subdir-external-provisioner/nfs-subdir-external-provisioner
         values:
          nfs:
            server: "{{ nfs_ip_address }}"
            path: /nfs-storage

     - name: wait for pods to come up
       shell: kubectl get pods -n {{k8_name_space}}  -o json
       register: kubectl_get_pods
       until: kubectl_get_pods.stdout|from_json|json_query('items[*].status.phase')|unique == ["Running"]
       retries: 10
       delay: 30
  

# TODO kubectl patch storageclass nfs-client -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'

     - name: patch storageclass nfs-client as default storage class 
       kubernetes.core.k8s:
          state: patched
          kind: StorageClass
          name: nfs-client
          definition:
            metadata:
              annotations:
                storageclass.kubernetes.io/is-default-class: "true"